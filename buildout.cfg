[buildout]
eggs-directory = ${buildout:directory}/eggs
download-cache = ${buildout:directory}/downloads
# using 'virtualenv', so can't create a 'python' script...
parts = 
    bpython
    pyflakes
    uwsgi-download
    uwsgi-compile
    nginx
    nginx-config
    trac-launcher
    create-directories
    neon
    subversion
    subversion-binds
    supervisor
    supervisor-cron
    backup
    trac-plugins-staging
    tracwysiwyg
    first-instructions

develop = .
unzip = true
eggs = 
    pep8 == 0.6.1
    pysqlite == 2.6.0
    trac_launcher
    Trac == 0.12.2

[config]
nginx-http-port = 8080
#nginx-https-port = 8443
supervisor-http-port = 9000
host = 127.0.0.1
socket-directory = ${buildout:directory}/var/run
pid-directory = ${buildout:directory}/var/run
log-directory = ${buildout:directory}/var/log
templates-directory = ${buildout:directory}/etc/templates
trac-projects-directory = ${buildout:directory}/opt/trac
trac-global-directory = ${buildout:directory}/opt/trac/global/plugins
svn-repository-directory = ${buildout:directory}/opt/svn

[bpython]
recipe = zc.recipe.egg
eggs =
    bpython
    ${buildout:eggs}
interpreter = bpython

[pyflakes]
recipe = zc.recipe.egg:scripts
eggs = pyflakes == 0.4.0
entry-points = pyflakes=pkg_resources:run_script
arguments = 'pyflakes', 'pyflakes'
 
[uwsgi-download]
recipe = gocept.download
url = http://projects.unbit.it/downloads/uwsgi-0.9.7.2.tar.gz
strip-top-level-dir = true
md5sum = 9bdf8ed5c8b32ace085dbd0f9488f880

[uwsgi-compile]
recipe = yaco.recipe.uwsgi==0.2.0
uwsgi-location = ${uwsgi-download:location}

[uwsgi-config]
socket-path = ${config:socket-directory}/uwsgi.sock
pid-path = ${config:pid-directory}/uwsgi.pid
log-path = ${config:log-directory}/uwsgi.log
python-path = ${config:trac-projects-directory}
trac-wsgi-path = ${buildout:bin-directory}/trac.wsgi

[nginx]
recipe = hexagonit.recipe.cmmi
url = http://nginx.org/download/nginx-1.0.3.tar.gz
configure-options =
    --conf-path=${buildout:directory}/etc/nginx/nginx.conf
    --error-log-path=${buildout:directory}/var/log/nginx-error.log
    --http-log-path=${buildout:directory}/var/log/nginx-access.log
    --pid-path=${buildout:directory}/var/run/nginx.pid
    --lock-path=${buildout:directory}/var/lock/nginx.lock
    --with-http_ssl_module 
    --with-http_stub_status_module

[nginx-config]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/templates/nginx/nginx-http.conf.in
output = ${buildout:directory}/etc/nginx/nginx.conf
htpasswd_file = ${buildout:directory}/opt/trac/global/htpasswd

http-port = ${config:nginx-http-port}
#https-port = ${config:nginx-https-port}
server-name = ${config:host}
uwsgi-socket = ${config:socket-directory}/uwsgi.sock
#ssl-certificate-file = ${buidout:directory}/etc/ssl/path/to/cert.pem
#ssl-certificate-key-file = ${buidout:directory}/etc/ssl/path/to/file.key
client_max_body_size = 100M
client_body_buffer_size = 100M

[trac-launcher]
recipe = zc.recipe.egg
entry-points = ${buildout:bin-directory}/trac.wsgi=trac_launcher:not_user
initialization = 
    import sys
    sys.stdout = sys.stderr

    import os
    os.environ['TRAC_ENV_PARENT_DIR'] = '${config:trac-projects-directory}'
    os.environ['PYTHON_EGG_CACHE'] = '${config:trac-projects-directory}/.egg-cache'

    import trac.web.main
    application = trac.web.main.dispatch_request

eggs = ${buildout:eggs}

[create-directories]
recipe = z3c.recipe.mkdir
paths = 
    ${config:trac-projects-directory}
    ${config:svn-repository-directory}
    ${config:trac-projects-directory}/.egg-cache
    ${config:trac-global-directory}

[neon]
# required by svn, to do http/https !!
recipe = hexagonit.recipe.cmmi
url = http://www.webdav.org/neon/neon-0.29.6.tar.gz
configure-options = 
    --prefix=${buildout:directory}
make-targets = 
    install

[subversion]
recipe = hexagonit.recipe.cmmi
url = http://subversion.tigris.org/downloads/subversion-1.6.16.tar.bz2
configure-options = 
  --bindir=${buildout:bin-directory}
  --without-berkeley-db
  --with-ssl
  --with-apr=/usr/bin/apr-config
  --with-apr-util=/usr/bin/apu-config
  --with-neon=${buildout:directory}

make-targets = 
    install
    swig-py
    install-swig-py

[subversion-binds]
# not needed with 'virtualenv' ...
recipe = plone.recipe.command
command = 
    ln -s ${subversion:location}/lib/svn-python/libsvn
    ln -s ${subversion:location}/lib/svn-python/svn

[supervisor]
recipe = collective.recipe.supervisor
port = ${config:supervisor-http-port}
user = admin
password = admin.
pidfile = ${config:pid-directory}/supervisord.pid
serverurl = http://${config:host}:${config:supervisor-http-port}
plugins = 
    superlance
programs =
    0 nginx ${nginx:location}/sbin/nginx [ -c ${buildout:directory}/etc/nginx/nginx.conf ]
    1 uwsgi ${buildout:bin-directory}/uwsgi [ -p 1 -C -A 4 -m -s ${uwsgi-config:socket-path} --wsgi-file ${uwsgi-config:trac-wsgi-path} --pythonpath ${uwsgi-config:python-path} --pidfile ${uwsgi-config:pid-path} ]

[supervisor-cron]
recipe = z3c.recipe.usercrontab
times = @reboot
command = ${buildout:bin-directory}/supervisord

[backup]
recipe = iw.recipe.backup
backup-script-name = backup
restore-script-name = restore
format = trac-%(name)s-%(year)s%(month)s%(day)s
target-folder = ${buildout:directory}/backups
log-file = ${config:log-directory}/backup.log
base-path = ${config:trac-projects-directory}

[trac-plugins-staging]
recipe = iw.recipe.subversion
urls =
    http://trac-hacks.org/svn/tracwysiwygplugin/0.12  tracwysiwyg

[tracwysiwyg]
recipe = collective.recipe.cmd
on_install = true
cmds =
    cd ${buildout:directory}/parts/trac-plugins-staging/tracwysiwyg
    python setup.py bdist_egg
    cp -p dist/*.egg  ${config:trac-projects-directory}/global/plugins

[first-instructions]
recipe = plone.recipe.command
command =
    cat ${buildout:directory}/doc/easyTrac-first-instructions.txt
